{"version":3,"sources":["components/Selector/MealCard/MealCard.module.css","components/Selector/Selector.module.css","containers/Layout/Layout.module.css","components/UI/Button/RemoveButton/RemoveButton.module.css","components/UI/Button/Button.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/Selector/ShoppingList/ShoppingList.module.css","hoc/Aux.js","containers/Layout/Layout.js","store/actions/actionTypes.js","components/UI/Button/RemoveButton/RemoveButton.js","components/UI/Button/Button.js","components/Selector/MealCard/MealCard.js","store/actions/meal.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Selector/ShoppingList/ShoppingList.js","components/Selector/Selector.js","App.js","store/reducers/meals.js","index.js"],"names":["module","exports","aux","props","children","Layout","Aux","className","classes","Content","this","style","width","Component","ADD_MEAL","REMOVE_MEAL","ADD_INGREDIENT","REMOVE_INGREDIENT","SELECT_MEAL","DESELECT_MEAL","FETCH_MEALS","removeButton","RemoveButton","onClick","clicked","button","Button","MealCard","state","selected","addingIngredient","showIngredients","Boolean","new","componentDidMount","meal","ingredients","length","setState","onAddIngredientClicked","toggleShowIngredients","prevState","toggleSelectMeal","onDeselectMeal","name","onSelectMeal","onAddIngredientKeyPress","e","key","onAddIngredient","target","value","cardClasses","push","Selected","header","addInput","onKeyPress","autoFocus","onBlur","addMealKeyPress","map","ing","index","Remove","onRemoveIngredient","total","Add","selectColour","selectOpacity","join","RMHolder","backgroundColor","opacity","removeMealClicked","Title","connect","selectedMeals","dispatch","mealName","ingredientName","type","actionTypes","mealActions","backdrop","show","Backdrop","modal","modalClosed","Modal","transform","display","opactiy","ShoppingList","getIngredients","meals","ings","i","j","Object","keys","suffix","Selector","addingMeal","showList","showErrorModal","errorMessage","onFetchMeals","onAddMealClicked","onAddMealKeyPress","found","onAddMeal","onShowList","onDismissModal","addingMealCard","onRemoveMeal","initialMeals","App","initialState","reducer","action","nextMealsAdd","concat","localStorage","setItem","JSON","stringify","nextMealsRemove","slice","nextMealsAddIngredient","thisMealAdd","filter","m","oldAddIngredients","newAddIngredients","removeIngredientIndex","nextMealsRemoveIngredient","thisMealRemove","oldRemoveIngredients","newRemoveIngredients","selectedMeal","selectedIndex","nextSelectedMeals","fetchedMeals","parse","getItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c522780.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MealCard\":\"MealCard_MealCard__26Yvk\",\"Selected\":\"MealCard_Selected__2PPtQ\",\"Hidden\":\"MealCard_Hidden__1pzE-\",\"Title\":\"MealCard_Title__R-MOE\",\"Add\":\"MealCard_Add__24PAG\",\"RMHolder\":\"MealCard_RMHolder__Bsk2Y\",\"RemoveMeal\":\"MealCard_RemoveMeal__3eLZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"Selector_Selector__J2pJn\",\"Button\":\"Selector_Button__3iUmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RemoveButton\":\"RemoveButton_RemoveButton__1uEds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShoppingList\":\"ShoppingList_ShoppingList__1dlPf\"};","const aux = props => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\n\nimport classes from './Layout.module.css';\n\nclass Layout extends Component {\n    render () {\n        return (\n\n            <Aux>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n                <footer>\n                        <hr style={{width: \"90%\"}}/>\n                        <p>George Harvey 2020</p>\n                </footer>\n            </Aux>\n        );\n    }\n}\n\nexport default Layout;","export const ADD_MEAL = 'ADD_MEAL';\nexport const REMOVE_MEAL = 'REMOVE_MEAL';\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SELECT_MEAL = 'SELECT_MEAL';\nexport const DESELECT_MEAL = 'DESELECT_MEAL';\nexport const FETCH_MEALS = 'FETCH_MEALS';","import React from 'react';\n\nimport classes from './RemoveButton.module.css';\n\nconst removeButton = props => (\n    <button \n        className={classes.RemoveButton}\n        onClick={props.clicked}>{props.children}\n    </button>\n);\n\nexport default removeButton;","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = props => (\n    <button \n        className={classes.Button}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as mealActions from '../../../store/actions/index';\n\nimport RemoveButton from '../../UI/Button/RemoveButton/RemoveButton';\nimport Button from '../../UI/Button/Button';\n\nimport Aux from '../../../hoc/Aux';\n\nimport classes from './MealCard.module.css';\n\nclass MealCard extends Component {\n\n    state = {\n        selected: false,\n        addingIngredient: false,\n        showIngredients: Boolean(this.props.new)\n    }\n\n    componentDidMount = () => {\n        if (this.props.meal && this.props.meal.ingredients.length === 0) {\n            this.setState({\n                showIngredients: true\n            });\n        }\n    }\n\n    onAddIngredientClicked = () => {\n        this.setState({\n            addingIngredient: true\n        });\n    }\n\n    toggleShowIngredients = () => {\n        this.setState(prevState => {\n            return {\n                showIngredients: !prevState.showIngredients\n            }\n        });\n    }\n\n    toggleSelectMeal = () => {  \n\n        if (this.props.new) {\n            return;\n        }      \n        if (!this.state.selected) {\n            this.props.onSelectMeal(this.props.meal.name);\n        } else {\n            this.props.onDeselectMeal(this.props.meal.name);\n        }\n\n        this.setState(prevState => {\n            return {\n                selected: !prevState.selected\n            }\n        });\n    }\n\n    onAddIngredientKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            this.setState({\n                addingIngredient: false\n            });\n            this.props.onAddIngredient(this.props.meal.name, e.target.value);\n        }\n    }\n\n    render () {\n\n        let cardClasses = [classes.MealCard];\n\n        if (this.state.selected) {\n            cardClasses.push(classes.Selected);\n        }\n\n        let addInput = null;\n\n        if (this.state.addingIngredient) {\n            addInput = <input \n                onKeyPress={this.onAddIngredientKeyPress}\n                autoFocus={true}\n                onBlur={() => {this.setState({addingIngredient: false})}}/>\n        }\n\n        let header;\n        let ingredients = [];\n\n        if (this.props.new) {\n            header = <input \n                onKeyPress={this.props.addMealKeyPress}\n                autoFocus={true}/>;\n        } else {\n            header = (\n                <Aux>\n                    <h3>{this.props.meal.name}</h3>\n                    <Button clicked={this.toggleShowIngredients}>{this.state.showIngredients ? \"Hide Ingredients\" : \"Show Ingredients\"}</Button>\n                </Aux>\n            );    \n            ingredients = this.props.meal.ingredients.map((ing, index) => (\n                <li key={index}>\n                    <RemoveButton \n                        className={classes.Remove}\n                        clicked={() => this.props.onRemoveIngredient(this.props.meal.name, ing)}>\n                            X\n                    </RemoveButton>\n                    <p>{ing}</p>\n                </li>\n            ));\n        }\n\n        let total = (\n            <Aux>\n                <hr />\n                <ul>\n                    {ingredients}\n                </ul>\n                {addInput}\n                <button \n                    className={classes.Add}\n                    onClick={this.onAddIngredientClicked}>+</button>\n            </Aux>\n        );\n\n        if (!this.state.showIngredients) {\n            total = null;\n        }\n\n        let selectColour = this.state.selected ? \"rgb(112, 112, 112)\" : \"rgb(53, 110, 53)\";\n        let selectOpacity = \"1\";\n\n        if (this.props.new) {\n            selectColour = \"rgb(112, 112, 112)\";\n            selectOpacity = 0.5;\n        }\n\n        return (\n            <div className={cardClasses.join(\" \")}>\n                <div className={classes.RMHolder}>\n                    <button \n                        className={selectColour}\n                        style={{backgroundColor: selectColour, opacity: selectOpacity}}\n                        onClick={this.toggleSelectMeal}>{this.state.selected ? \"Deselect\" : \"Select\"}</button>\n                    <button\n                        style={{backgroundColor: \"rgb(180, 66, 66)\"}} \n                        onClick={this.props.removeMealClicked}>\n                            Delete\n                    </button>\n                </div>\n                <div \n                    className={classes.Title}\n                    >{header}\n                </div>\n                {total}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedMeals: state.selectedMeals\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddIngredient: (mealName, ingredientName) => dispatch(mealActions.addIngredient(mealName, ingredientName)),\n        onRemoveIngredient: (mealName, ingredientName) => dispatch(mealActions.removeIngredient(mealName, ingredientName)),\n        onSelectMeal: mealName => dispatch(mealActions.selectMeal(mealName)),\n        onDeselectMeal: mealName => dispatch(mealActions.deSelectMeal(mealName))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MealCard);","import * as actionTypes from './actionTypes';\n\nexport const addMeal = mealName => {\n    return {\n        type: actionTypes.ADD_MEAL,\n        mealName: mealName\n    }\n}\n\nexport const removeMeal = mealName => {\n    return {\n        type: actionTypes.REMOVE_MEAL,\n        mealName: mealName\n    }\n}\n\nexport const addIngredient = (mealName, ingredientName) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        mealName: mealName,\n        ingredientName: ingredientName\n    }\n}\n\nexport const removeIngredient = (mealName, ingredientName) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        mealName: mealName,\n        ingredientName: ingredientName\n    }\n}\n\nexport const selectMeal = (mealName) => {\n    return {\n        type: actionTypes.SELECT_MEAL,\n        mealName: mealName\n    }\n}\n\nexport const deSelectMeal = (mealName) => {\n    return {\n        type: actionTypes.DESELECT_MEAL,\n        mealName: mealName\n    }\n}\n\nexport const fetchMeals = () => {\n    return {\n        type: actionTypes.FETCH_MEALS\n    }\n}","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = props => (\n    props.show ? <div \n        className={classes.Backdrop} \n        onClick={props.clicked} /> : null\n)\n\nexport default backdrop;","import React from 'react';\n\nimport classes from './Modal.module.css';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux';\n\nconst modal = props => {\n    return (\n        <Aux>\n            <Backdrop \n                show={props.show} \n                clicked={props.modalClosed}/>\n            <div \n                className={classes.Modal}\n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    display: props.show ? 'block': 'none',\n                    opactiy: props.show ? '1' : '0'\n                }}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n}\n\nexport default modal;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './ShoppingList.module.css';\n\nclass ShoppingList extends Component {\n    \n    getIngredients = (meals) => {\n        let ings = {};\n        for (let i = 0; i < meals.length; i ++) {\n            let meal = meals[i];\n            for (let j = 0; j < meal.ingredients.length; j ++) {\n                if (meal.ingredients[j] in ings) {\n                    ings[meal.ingredients[j]] += 1\n                } else {\n                    ings[meal.ingredients[j]] = 1;\n                }\n            }\n        }\n        return ings;\n    }\n    render () {\n        let ingredients = this.getIngredients(this.props.selectedMeals);\n\n        return (\n            <div className={classes.ShoppingList}>\n                <h3>Your Shopping List:</h3>\n                <ul>\n                    {Object.keys(ingredients).map(ing => {\n                        let suffix = \"\";\n\n                        if (ingredients[ing] > 1) {\n                            suffix += \" \";\n                            for (let i = 0; i < ingredients[ing]; i ++) {\n                                suffix += \"*\";\n                            }\n                        }\n\n                        return (\n                            <li key={ing}>\n                                <p>{ing + suffix}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedMeals: state.selectedMeals\n    }\n}\n\nexport default connect(mapStateToProps)(ShoppingList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as mealActions from '../../store/actions/index';\n\nimport MealCard from './MealCard/MealCard';\nimport Modal from '../UI/Modal/Modal';\nimport ShoppingList from '../Selector/ShoppingList/ShoppingList';\n\nimport classes from './Selector.module.css';\n\nimport Aux from '../../hoc/Aux';\n\nclass Selector extends Component {\n\n    state = {\n        addingMeal: false,\n        showList: false,\n        showErrorModal: false,\n        errorMessage: \"\"\n    }\n\n    componentDidMount = () => {\n        this.props.onFetchMeals();\n    }\n\n    onAddMealClicked = () => {\n        this.setState({\n            addingMeal: true\n        });\n    }\n\n    onAddMealKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            let found = false;\n            for (let i = 0; i < this.props.meals.length; i ++) {\n                if (this.props.meals[i].name === e.target.value) {\n                    found = true;\n                }\n            }\n\n            if (found) {\n                this.setState({\n                    showErrorModal: true,\n                    errorMessage: `You already have a meal named ${e.target.value}!`\n                })\n            } else {\n                this.setState({\n                    addingMeal: false\n                });\n                this.props.onAddMeal(e.target.value);\n            }\n        }\n    }\n\n    onShowList = () => {\n        this.setState({\n            showList: true\n        })\n    }\n\n    onDismissModal = () => {\n        this.setState({\n            showList: false,\n            showErrorModal: false\n        });\n    }\n\n    render () {\n        let addingMealCard = null;\n        if (this.state.addingMeal) {\n            addingMealCard = <MealCard \n                                key={0}\n                                new\n                                addMealKeyPress={(e) => this.onAddMealKeyPress(e)}\n                                removeMealClicked={() => this.setState({addingMeal: false})}/>\n        }\n\n        return (\n            <Aux>\n                <h1>Meal Selector</h1>\n                <button\n                    className={classes.Button}\n                    onClick={this.onAddMealClicked}>Add Meal</button>\n                <button\n                    className={classes.Button}\n                    onClick={this.onShowList}>See List</button>\n                <div className={classes.Selector}>\n                    {this.props.meals.map((meal, index) => {\n                        return (\n                            <MealCard \n                                key={index} \n                                meal={meal} \n                                removeMealClicked={() => this.props.onRemoveMeal(meal.name)}/>\n                        );\n                    })}\n                    {addingMealCard}\n                </div>\n                \n                <Modal \n                    show={this.state.showList}\n                    modalClosed={this.onDismissModal}>\n                    <ShoppingList />\n                </Modal>\n                <Modal\n                    show={this.state.showErrorModal}\n                    modalClosed={this.onDismissModal}>\n                        <p>{this.state.errorMessage}</p>\n                </Modal>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        meals: state.meals\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddMeal: (mealName) => dispatch(mealActions.addMeal(mealName)),\n        onRemoveMeal: (mealName) => dispatch(mealActions.removeMeal(mealName)),\n        onFetchMeals: () => dispatch(mealActions.fetchMeals())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selector);","import './App.css';\n\nimport Layout from './containers/Layout/Layout';\n\nimport Selector from './components/Selector/Selector';\n\nlet initialMeals = [\n  {'name': 'curry', 'ingredients': ['rice', 'spice']},\n  {'name': 'soup', 'ingredients': ['vegetables', 'stock']},\n  {'name': 'burger', 'ingredients': ['patty', 'bun']},\n  {'name': 'eggs', 'ingredients': ['egg', 'bread']},\n  {'name': 'salad', 'ingredients': ['lettuce', 'gin']},\n  {'name': 'pasta', 'ingredients': ['pasata', 'tomato']}\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Selector meals={initialMeals}/>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\n\nlet initialMeals = [\n    {'name': 'curry', 'ingredients': ['rice', 'spice']},\n    {'name': 'soup', 'ingredients': ['vegetables', 'stock']},\n    {'name': 'burger', 'ingredients': ['patty', 'bun']},\n    {'name': 'eggs', 'ingredients': ['egg', 'bread']},\n    {'name': 'salad', 'ingredients': ['lettuce', 'gin']},\n    {'name': 'pasta', 'ingredients': ['pasata', 'tomato']}\n  ];\n\nconst initialState = {\n    meals: initialMeals,\n    selectedMeals: []\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_MEAL:\n            let meal = {'name': action.mealName, 'ingredients': []};\n\n            let nextMealsAdd = state.meals.concat(meal);\n\n            localStorage.setItem(\"meals\", JSON.stringify(nextMealsAdd));\n\n            return {\n                ...state,\n                meals: nextMealsAdd\n            }\n        case actionTypes.REMOVE_MEAL:\n            let meals = [...state.meals];\n            let index;\n\n            for (let i = 0; i < meals.length; i ++) {\n                if (meals[i].name === action.mealName) {\n                    index = i;\n                    break;\n                }\n            }\n\n            let nextMealsRemove = meals.slice(0, index).concat(meals.slice(index + 1, meals.length));\n\n            localStorage.setItem(\"meals\", JSON.stringify(nextMealsRemove));\n\n            return {\n                ...state,\n                meals: nextMealsRemove\n            }\n        case actionTypes.ADD_INGREDIENT:\n            let nextMealsAddIngredient = [...state.meals];\n            let thisMealAdd = nextMealsAddIngredient.filter(m => m.name === action.mealName)[0];\n            let oldAddIngredients = [...thisMealAdd.ingredients];\n            let newAddIngredients = oldAddIngredients.concat(action.ingredientName);\n            thisMealAdd.ingredients = newAddIngredients;\n\n            localStorage.setItem(\"meals\", JSON.stringify(nextMealsAddIngredient));\n\n            return {\n                ...state,\n                meals: nextMealsAddIngredient\n            }\n        case actionTypes.REMOVE_INGREDIENT:\n            let nextMealsRemoveIngredient = [...state.meals];\n            let thisMealRemove = nextMealsRemoveIngredient.filter(m => m.name === action.mealName)[0];\n            let oldRemoveIngredients = [...thisMealRemove.ingredients];\n            let removeIngredientIndex;\n            for (let i = 0; i < oldRemoveIngredients.length; i ++) {\n                if (oldRemoveIngredients[i] === action.ingredientName) {\n                    removeIngredientIndex = i;\n                }\n            }\n            let newRemoveIngredients = oldRemoveIngredients.slice(0, removeIngredientIndex).concat(oldRemoveIngredients.slice(removeIngredientIndex + 1, oldRemoveIngredients.length));\n            thisMealRemove.ingredients = newRemoveIngredients;\n\n            localStorage.setItem(\"meals\", JSON.stringify(nextMealsRemoveIngredient));\n\n            return {\n                ...state,\n                meals: nextMealsRemoveIngredient\n            }\n        case actionTypes.SELECT_MEAL:\n            let selectedMeal = state.meals.filter(m => m.name === action.mealName)[0];\n\n            return {\n                ...state,\n                selectedMeals: state.selectedMeals.concat(selectedMeal)\n            }\n        case actionTypes.DESELECT_MEAL:\n            let selectedIndex;\n\n            for (let i = 0; i < state.selectedMeals.length; i ++) {\n                if (state.selectedMeals[i].name === action.mealName) {\n                    selectedIndex = i;\n                    break;\n                }\n            }\n\n            let nextSelectedMeals = state.selectedMeals.slice(0, selectedIndex).concat(state.selectedMeals.slice(selectedIndex + 1, state.selectedMeals.length));\n            return {\n                ...state,\n                selectedMeals: nextSelectedMeals\n            }\n        case actionTypes.FETCH_MEALS:\n            let fetchedMeals = JSON.parse(localStorage.getItem('meals'));\n            if (!fetchedMeals) {\n                fetchedMeals = state.meals;\n                localStorage.setItem(\"meals\", JSON.stringify(fetchedMeals));\n            }\n            return {\n                ...state,\n                meals: fetchedMeals\n            }\n        default:\n            return state;\n\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './index.css';\nimport App from './App';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/meals';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}